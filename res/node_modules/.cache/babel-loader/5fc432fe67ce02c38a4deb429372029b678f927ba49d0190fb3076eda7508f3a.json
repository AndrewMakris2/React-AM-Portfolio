{"ast":null,"code":"var _jsxFileName = \"/Users/andrew.makris/Documents/GitHub/React-AM-Portfolio/res/src/Components/Professional.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Professional = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Expierence\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Professional Expiernce & Certifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), say.map(quotes => {\n        const {\n          id,\n          Quote,\n          song,\n          Album,\n          Year,\n          img\n        } = quotes;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quote-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\\"\", song, \"\\\" in \", Album, \" | \", Year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\\"\", Quote, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Professional;\nexport default Professional;\nvar _c;\n$RefreshReg$(_c, \"Professional\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Professional","className","children","fileName","_jsxFileName","lineNumber","columnNumber","say","map","quotes","id","Quote","song","Album","Year","img","src","alt","_c","$RefreshReg$"],"sources":["/Users/andrew.makris/Documents/GitHub/React-AM-Portfolio/res/src/Components/Professional.jsx"],"sourcesContent":["import React from 'react'\n\n\nconst Professional = () => {\n  return (\n    <div className='Expierence'>\n      <div>\n        <h2>Professional Expiernce & Certifications</h2>\n        <hr />\n        {say.map((quotes)=>{\n                    const {id,Quote,song,Album,Year,img} = quotes;\n                    return(\n                        <div className=\"quote-card\" key={id}>\n                            <img src={img} alt=\"\" />\n                            <h3>\"{song}\" in {Album} | {Year}</h3>\n                            <hr />\n                            <p>\"{Quote}\"</p>\n                        </div>\n                    )\n                })}\n      </div>\n      <div>\n        <img src=\"\" alt=\"\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Professional"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACED,OAAA;IAAKE,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBH,OAAA;MAAAG,QAAA,gBACEH,OAAA;QAAAG,QAAA,EAAI;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDP,OAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLC,GAAG,CAACC,GAAG,CAAEC,MAAM,IAAG;QACP,MAAM;UAACC,EAAE;UAACC,KAAK;UAACC,IAAI;UAACC,KAAK;UAACC,IAAI;UAACC;QAAG,CAAC,GAAGN,MAAM;QAC7C,oBACIV,OAAA;UAAKE,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBH,OAAA;YAAKiB,GAAG,EAAED,GAAI;YAACE,GAAG,EAAC;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxBP,OAAA;YAAAG,QAAA,GAAI,IAAC,EAACU,IAAI,EAAC,QAAK,EAACC,KAAK,EAAC,KAAG,EAACC,IAAI;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrCP,OAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNP,OAAA;YAAAG,QAAA,GAAG,IAAC,EAACS,KAAK,EAAC,IAAC;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GAJaI,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAK9B,CAAC;MAEd,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNP,OAAA;MAAAG,QAAA,eACEH,OAAA;QAAKiB,GAAG,EAAC,EAAE;QAACC,GAAG,EAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAY,EAAA,GAvBKlB,YAAY;AAyBlB,eAAeA,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}